<?php
class Custom_Productupdate_PriceSkuController extends Mage_Core_Controller_Front_Action
{
    public function indexAction()
    {
        Mage::app()->setCurrentStore(Mage_Core_Model_App::ADMIN_STORE_ID);
    	$products = Mage::getModel('catalog/product')->getCollection();
        $products->addAttributeToFilter('status', 1);//enabled
        //$products->addAttributeToFilter('visibility', 4);//catalog, search
        //$products->addAttributeToSort('name', 'ASC');
        $products->addAttributeToSelect('*');
        
        /*----- 07-06-2019 ----- */
        // call API for currency conversion rate
        $date = new DateTime();
        $_dateBefore = $date->modify("-1 day");
        $date2 = $_dateBefore->format('Y-m-d');
        $date3 = explode("-",$date2);
        $year = $date3[0];
        $month = $date3[1];
        $day = $date3[2];
        //exit;
        //$time_stmp = gmdate("Y-m-d\TH:i:s\Z", strtotime('-48 hours', time()));
        
        // database table connection
        $resource     = Mage::getSingleton('core/resource');
        $writeAdapter = $resource->getConnection('core_write');
        $table        = $resource->getTableName('store_coversion_rate');
        
        // for dolor
        $_apiCurrency = "dolar";
        $dolar_api = "https://api.sbif.cl/api-sbifv3/recursos_api/".$_apiCurrency."/".$year."/".$month."/dias/".$day."?apikey=69536bf6d9eb5bbcf69655411edf08295a60f2d6&formato=xml";
        //echo $dolar_api;
        $xml = simplexml_load_file($dolar_api);
        //print_r($xml);
        $val = $xml->Dolares->Dolar->Valor;
        $valor_price = str_replace(',','.',$val);
        
        // save currency coversion rate in a table
        $query = "INSERT INTO {$table} (`rate_id`,`date_time`,`currency`,`convertion_price`) VALUES ('', '$date2', '$_apiCurrency', '$valor_price');";
        //echo $query;
        $writeAdapter->query($query);
        
        // for euro
        $_apiCurrencyE = "euro";
        $euro_api = "https://api.sbif.cl/api-sbifv3/recursos_api/".$_apiCurrencyE."/".$year."/".$month."/dias/".$day."?apikey=69536bf6d9eb5bbcf69655411edf08295a60f2d6&formato=xml";
        //echo $euro_api;
        $xml2 = simplexml_load_file($euro_api);
        //print_r($xml);
        echo $val2 = $xml2->Euros->Euro->Valor;
        $valor_price2 = str_replace(',','.',$val2);
        
        // save currency coversion rate in a table
        $query2 = "INSERT INTO {$table} (`rate_id`,`date_time`,`currency`,`convertion_price`) VALUES ('', '$date2', '$_apiCurrencyE', '$val2');";
        //echo $query2;
        $writeAdapter->query($query2);
        
        // for UF
        $_apiCurrencyUF = "uf";
        $uf_api = "https://api.sbif.cl/api-sbifv3/recursos_api/".$_apiCurrencyUF."/".$year."/".$month."/dias/".$day."?apikey=69536bf6d9eb5bbcf69655411edf08295a60f2d6&formato=xml";
        //echo $uf_api;
        $xml3 = simplexml_load_file($uf_api);
        //print_r($xml);
        $val3 = $xml3->UFs->UF->Valor;
        //$valor_price = str_replace(',','.',$val);
        
        // save currency coversion rate in a table
        $query3 = "INSERT INTO {$table} (`rate_id`,`date_time`,`currency`,`convertion_price`) VALUES ('', '$date2', '$_apiCurrencyUF', '$val3');";
        //echo $query3;
        $writeAdapter->query($query3);
        
        // for UTM
        $_apiCurrencyUTM = "utm";
        $utm_api = "https://api.sbif.cl/api-sbifv3/recursos_api/".$_apiCurrencyUTM."/".$year."/".$month."/dias/".$day."?apikey=69536bf6d9eb5bbcf69655411edf08295a60f2d6&formato=xml";
        //echo $utm_api;
        $xml4 = simplexml_load_file($utm_api);
        //print_r($xml);
        $val4 = $xml4->UTMs->UTM->Valor;
        $valor_price4 = str_replace(',','.',$val4);
        
        // save currency coversion rate in a table
        $query4 = "INSERT INTO {$table} (`rate_id`,`date_time`,`currency`,`convertion_price`) VALUES ('', '$date2', '$_apiCurrencyUTM', '$val4');";
        //echo $query4;
        $writeAdapter->query($query4);
        
        //
        foreach($products as $product){
            $_proId = $product->getId();
            $_product = Mage::getModel('catalog/product')->load($_proId);
            
            echo $sku = $_product->getSku();
            echo '->'.$_proId;
            
            /*----- 07-06-2019 ----- */
            $api_key = Mage::getStoreConfig('productupdate/productupdate_group/apiKey');
            $access_key = Mage::getStoreConfig('productupdate/productupdate_group/accessKey');
            $time_stmp = gmdate("Y-m-d\TH:i:s\Z");
            //$string = $api_key.",".$access_key.",".$time_stmp;
            $string = $api_key.",".$access_key.",";
            //$signature = hash('sha256', '5119728a-7d9a-4dc0-9733-0dddd7d8207b,e56ad576-9572-43ba-ab04-6b79724b21b9,'.$time_stmp);
            $signature = hash('sha256', $string.$time_stmp);
            //exit;
            //echo $api_url = 'https://intcomex-test.apigee.net/v1/getproduct?&apiKey=5119728a-7d9a-4dc0-9733-0dddd7d8207b&utcTimeStamp=2019-06-06T00:50:40.982Z&signature=8a4b8a74a4961f1251f41e9a2696db616185b0830eddad6aa8dc9948207b1d9c&sku='.$sku.'&locale=es';
            $api_url = 'https://intcomex-test.apigee.net/v1/getproduct?&apiKey='.$api_key.'&utcTimeStamp='.$time_stmp.'&signature='.$signature.'&sku='.$sku.'&locale=es';
            //exit;
            //echo '<pre>';
            /*----- 07-06-2019 ----- */
            
            $ch = curl_init();
            curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false);
            curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
            curl_setopt($ch, CURLOPT_URL, $api_url);
            $result = curl_exec($ch);
            curl_close($ch);
            
            $get_prod_array = json_decode($result, true);
            //print_r($get_prod_array);
            $price = $get_prod_array['Price']['UnitPrice'];
            
            //echo $valor_price;
            if($price && $valor_price){
                //$valor_price = str_replace(',','.',$val);
                //echo "<br>";
                //echo $price * $val;
                //$_convertPrice = $price;//will convert later
                $_convertPrice = $price * $valor_price;
                //exit;
                $_priceCat = $_product->getAttributeText('price_category');
                $_priceCat1 = explode("-", $_priceCat);
                $_priceCat2 = $_priceCat1[1];
                $_priceCat3 = explode("%", $_priceCat2);
                $_profitAmt = $_priceCat3[0];
                $_finalPrice = $_convertPrice + (($_convertPrice * $_profitAmt)/100);
                //exit;
                //$_priceCat1 = ex
                /*echo "<pre>";
                print_r($_product->getData());
                exit;*/
                //$product->setPrice($price);
                $product->setCost($_convertPrice);
                $product->setPrice($_finalPrice);
                $product->save();
                
                
            }
            /*----- 07-06-2019 ----- */
            
            $stock = $get_prod_array['InStock'];
            $stockItem =Mage::getModel('cataloginventory/stock_item')->loadByProduct($_proId);
            $stockItemId = $stockItem->getId();
            /*----- 07-06-2019 ----- */
            if($stock != 0){
                $stockItem->setData('is_in_stock', 1);
            }else{
                $stockItem->setData('is_in_stock', 0);
            }
            /*----- 07-06-2019 ----- */
            $stockItem->setData('qty', (integer)$stock);
            $stockItem->save();
            
            echo '<hr>';
            
        }
        echo '<br>Completed';
    
    }
}